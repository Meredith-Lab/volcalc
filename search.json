[{"path":[]},{"path":"https://meredith-lab.github.io/volcalc/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://meredith-lab.github.io/volcalc/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://meredith-lab.github.io/volcalc/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://meredith-lab.github.io/volcalc/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://meredith-lab.github.io/volcalc/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement kristinariemer@arizona.edu. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://meredith-lab.github.io/volcalc/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://meredith-lab.github.io/volcalc/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://meredith-lab.github.io/volcalc/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://meredith-lab.github.io/volcalc/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://meredith-lab.github.io/volcalc/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://meredith-lab.github.io/volcalc/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://meredith-lab.github.io/volcalc/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 volcalc authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://meredith-lab.github.io/volcalc/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Kristina Riemer. Author, maintainer, copyright holder. Eric R. Scott. Contributor.","code":""},{"path":"https://meredith-lab.github.io/volcalc/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Riemer K (2023). volcalc: Calculate Volatility Chemical Compounds. doi:10.5281/zenodo.8015155, R package version 1.0.2. Meredith L, Riemer K, Geffre P, Honeker L, Krechmer J, Graves K, Tfaily M, Ledford S (prep). “Automating methods estimating metabolite volatility.” Frontiers Microbiology.","code":"@Manual{,   title = {volcalc: Calculate Volatility of Chemical Compounds},   author = {Kristina Riemer},   year = {2023},   note = {R package version 1.0.2},   doi = {10.5281/zenodo.8015155}, } @Article{,   title = {Automating methods for estimating metabolite volatility},   author = {LK Meredith and Kristina Riemer and P Geffre and L Honeker and J Krechmer and K Graves and M Tfaily and SK Ledford},   year = {in prep},   journal = {Frontiers in Microbiology}, }"},{"path":[]},{"path":"https://meredith-lab.github.io/volcalc/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Calculate Volatility of Chemical Compounds","text":"goal volcalc automate calculating estimates volatility chemical compounds. volcalc work progress—use risk! still stage development likely introduce many breaking changes. bit road map development headed, see proposal R Consortium grant. Volatility can estimated chemical compounds KEGG database, using just KEGG unique identifier compound interest. Alternatively, volatility can estimated multiple compounds KEGG pathway.","code":""},{"path":[]},{"path":"https://meredith-lab.github.io/volcalc/index.html","id":"using-without-installing","dir":"","previous_headings":"Installation","what":"Using without installing","title":"Calculate Volatility of Chemical Compounds","text":"can use volcalc package using RStudio server . instance can slow launch. instance generated using Binder, excellent free, open source tool create custom computing environments. see example use volcalc, run script example_volcalc_usage.R included server’s file system.","code":""},{"path":"https://meredith-lab.github.io/volcalc/index.html","id":"installing-locally","dir":"","previous_headings":"Installation","what":"Installing locally","title":"Calculate Volatility of Chemical Compounds","text":"can install development version volcalc GitHub r-universe can install ‘legacy’ version used -prep publication Installation volcalc requires system libraries OpenBabel Eigen3 (requirements ChemmineOB package, volcalc depends ). pak take care installation libraries systems, may need install manually. macOS, can installed via homebrew running following shell command: Ubuntu Linux: windows, OpenBabel included ChemmineOB binary need installed separately. installation options see OpenBabel documentation ChemmineOB install guide","code":"# install.packages(\"pak\") pak::pkg_install(\"Meredith-Lab/volcalc\") options(repos = c('https://cct-datascience.r-universe.dev', 'https://cloud.r-project.org')) pak::pkg_install('volcalc') pak::pkg_install(\"Meredith-Lab/volcalc@v1.0.2\") brew install open-babel sudo apt-get install libopenbabel-dev sudo apt-get install libeigen3-dev"},{"path":"https://meredith-lab.github.io/volcalc/index.html","id":"loading-package","dir":"","previous_headings":"Installation","what":"Loading package","title":"Calculate Volatility of Chemical Compounds","text":"Use package :","code":"library(volcalc)"},{"path":"https://meredith-lab.github.io/volcalc/index.html","id":"single-compound-usage","dir":"","previous_headings":"","what":"Single compound usage","title":"Calculate Volatility of Chemical Compounds","text":"basic example shows get volatility estimate example compound beta-2,3,4,5,6-Pentachlorocyclohexanol. KEGG compound identifier compound, found compound’s KEGG page, C16181.","code":""},{"path":"https://meredith-lab.github.io/volcalc/index.html","id":"single-function-approach","dir":"","previous_headings":"Single compound usage","what":"Single function approach","title":"Calculate Volatility of Chemical Compounds","text":"returns dataframe columns specifying general info compound, compound’s calculated volatility corresponding volatility category. functional group counts underlying volatility can additionally returned return_fx_groups = TRUE, intermediate calculation steps return_calc_steps = TRUE. list possible dataframe columns included . possible input arguments function. compound can alternatively specified chemical formula using compound_formula argument instead compound_id example. KEGG pathway compound part can included pathway_id argument, generate data subfolder compounds specified pathway. can specify compound files downloaded setting desired relative path using path = \"path//folder\"; otherwise, path data folder current directory. underlying data file compound already downloaded specified path, downloaded unless redownload = TRUE.","code":"out_path <- tempdir() calc_vol(compound_id = \"C16181\", path = out_path) #>      pathway compound  formula                                   name #> CMP1      NA   C16181 C6H7Cl5O beta-2,3,4,5,6-Pentachlorocyclohexanol #>      volatility category #> CMP1   6.975349     high"},{"path":"https://meredith-lab.github.io/volcalc/index.html","id":"multiple-function-approach","dir":"","previous_headings":"Single compound usage","what":"Multiple function approach","title":"Calculate Volatility of Chemical Compounds","text":"breaks steps done calc_vol three parts: 1) download compound’s .mol file KEGG, 2) count occurrences different functional groups, 3) estimate volatility. calculation uses SIMPOL approach1. example compound volatility around 7. high volatility category. Many arguments described calc_vol can used intermediate functions. See function documentation details.","code":"save_compound_mol(compound_id = \"C16181\", path = out_path) example_compound_fx_groups <-   get_fx_groups(compound_id = \"C16181\", path = out_path) example_compound_vol <-   calc_vol(compound_id = \"C16181\",            fx_groups_df = example_compound_fx_groups,            path = out_path) print(example_compound_vol$volatility) #> [1] 6.975349"},{"path":"https://meredith-lab.github.io/volcalc/index.html","id":"multiple-compounds-from-a-pathway-usage","dir":"","previous_headings":"","what":"Multiple compounds from a pathway usage","title":"Calculate Volatility of Chemical Compounds","text":"dataframe volatility estimates compounds chosen pathway can returned .","code":"example_pathway_vol <- calc_pathway_vol(\"map00361\", path = out_path) print(example_pathway_vol[1,]) #>       pathway compound formula name volatility category #> CMP1 map00361   C00011     CO2 CO2;   7.914113     high"},{"path":[]},{"path":"https://meredith-lab.github.io/volcalc/index.html","id":"basic-compound-information","dir":"","previous_headings":"Dataframe columns","what":"Basic compound information","title":"Calculate Volatility of Chemical Compounds","text":"pathway: KEGG pathway identifier compound: KEGG compound identifier formula: compound chemical formula name: compound name mass: compound mass","code":""},{"path":"https://meredith-lab.github.io/volcalc/index.html","id":"counted-functional-groups-and-atoms","dir":"","previous_headings":"Dataframe columns","what":"Counted functional groups and atoms","title":"Calculate Volatility of Chemical Compounds","text":"carbons ketones aldehydes hydroxyl_groups carbox_acids peroxide hydroperoxide nitrate nitro carbon_dbl_bonds rings rings_aromatic hydroxyl_aromatic nitrophenol nitroester ester ether_alicyclic ether_aromatic amine_primary amine_secondary amine_tertiary amine_aromatic amines amides phosphoric_acid phosphoric_ester sulfate sulfonate thiol carbothioester oxygens chlorines nitrogens sulfurs phosphoruses bromines iodines fluorines","code":""},{"path":"https://meredith-lab.github.io/volcalc/index.html","id":"volatility-calculation-steps","dir":"","previous_headings":"Dataframe columns","what":"Volatility calculation steps","title":"Calculate Volatility of Chemical Compounds","text":"log_alpha: intermediate step log_Sum: intermediate step volatility: estimated volatility category: volatility category, values less 0 “none”, values 0 2 “moderate”, values 2 “high”","code":""},{"path":[]},{"path":"https://meredith-lab.github.io/volcalc/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Calculate Volatility of Chemical Compounds","text":"Please note volcalc project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://meredith-lab.github.io/volcalc/index.html","id":"how-to-contribute","dir":"","previous_headings":"","what":"How to contribute","title":"Calculate Volatility of Chemical Compounds","text":"appreciate many kinds feedback contributions R package. find bug, interested additional feature, made improvements package want share, feel free file issue GitHub repo.","code":""},{"path":"https://meredith-lab.github.io/volcalc/index.html","id":"how-to-cite","dir":"","previous_headings":"","what":"How to cite","title":"Calculate Volatility of Chemical Compounds","text":"use package published work, please cite using reference : Meredith, L.K., Riemer, K., Geffre, P., Honeker, L., Krechmer, J., Graves, K., Tfaily, M., Ledford, S.K. Automating methods estimating metabolite volatility. prep.","code":""},{"path":[]},{"path":"https://meredith-lab.github.io/volcalc/reference/calc_pathway_vol.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate volatility estimates for all compounds in a pathway — calc_pathway_vol","title":"Calculate volatility estimates for all compounds in a pathway — calc_pathway_vol","text":"Volatility value category estimated compounds specified pathway using SIMPOL formula","code":""},{"path":"https://meredith-lab.github.io/volcalc/reference/calc_pathway_vol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate volatility estimates for all compounds in a pathway — calc_pathway_vol","text":"","code":"calc_pathway_vol(   pathway_id,   path = \"data\",   redownload = FALSE,   return_fx_groups = FALSE,   return_calc_steps = FALSE )"},{"path":"https://meredith-lab.github.io/volcalc/reference/calc_pathway_vol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate volatility estimates for all compounds in a pathway — calc_pathway_vol","text":"pathway_id optional character string specifying KEGG pathway ID, format 5 digits prepended \"map\". path optional parameter set relative path location download data. redownload Download file even already downloaded path. return_fx_groups TRUE, includes functional group counts final dataframe. return_calc_steps TRUE, includes intermediate volatility calculation steps final dataframe.","code":""},{"path":"https://meredith-lab.github.io/volcalc/reference/calc_pathway_vol.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate volatility estimates for all compounds in a pathway — calc_pathway_vol","text":"Dataframe columns basic compound info volatility value category. See documentation column descriptions.","code":""},{"path":"https://meredith-lab.github.io/volcalc/reference/calc_pathway_vol.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate volatility estimates for all compounds in a pathway — calc_pathway_vol","text":"","code":"if (FALSE) { ex_pathway <- calc_pathway_vol(pathway_id = \"map00361\") }"},{"path":"https://meredith-lab.github.io/volcalc/reference/calc_vol.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate volatility estimate for compound — calc_vol","title":"Calculate volatility estimate for compound — calc_vol","text":"Volatility value category estimated specified compound using SIMPOL formula","code":""},{"path":"https://meredith-lab.github.io/volcalc/reference/calc_vol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate volatility estimate for compound — calc_vol","text":"","code":"calc_vol(   compound_id = NULL,   compound_formula = NULL,   pathway_id = NULL,   path = \"data\",   redownload = FALSE,   save_file = TRUE,   get_groups = TRUE,   fx_groups_df = NULL,   return_fx_groups = FALSE,   return_calc_steps = FALSE )"},{"path":"https://meredith-lab.github.io/volcalc/reference/calc_vol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate volatility estimate for compound — calc_vol","text":"compound_id character string 5 digits prepended \"C\". compound_formula character string detailing compound formula. pathway_id optional character string specifying KEGG pathway ID, format 5 digits prepended \"map\". path optional parameter set relative path location download data. redownload Download file even already downloaded path. save_file Whether save downloaded compound mol files. get_groups FALSE, expect dataframe read fx_groups_df argument. fx_groups_df dataframe functional group counts compounds generated get_fx_groups(). return_fx_groups TRUE, includes functional group counts final dataframe. return_calc_steps TRUE, includes intermediate volatility calculation steps final dataframe.","code":""},{"path":"https://meredith-lab.github.io/volcalc/reference/calc_vol.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate volatility estimate for compound — calc_vol","text":"Dataframe columns basic compound info volatility value category. See documentation column descriptions.","code":""},{"path":"https://meredith-lab.github.io/volcalc/reference/calc_vol.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate volatility estimate for compound — calc_vol","text":"","code":"if (FALSE) { ex_compound <- calc_vol(compound_id = \"C16181\") }"},{"path":"https://meredith-lab.github.io/volcalc/reference/get_fx_groups.html","id":null,"dir":"Reference","previous_headings":"","what":"Count functional groups of a compound — get_fx_groups","title":"Count functional groups of a compound — get_fx_groups","text":"Return functional group counts relevant volatility calculation specified compound","code":""},{"path":"https://meredith-lab.github.io/volcalc/reference/get_fx_groups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count functional groups of a compound — get_fx_groups","text":"","code":"get_fx_groups(compound_id, pathway_id = NULL, path = \"data\")"},{"path":"https://meredith-lab.github.io/volcalc/reference/get_fx_groups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count functional groups of a compound — get_fx_groups","text":"compound_id character string 5 digits prepended \"C\". pathway_id optional character string specifying KEGG pathway ID, format 5 digits prepended \"map\". path optional parameter set relative path location download data.","code":""},{"path":"https://meredith-lab.github.io/volcalc/reference/get_fx_groups.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count functional groups of a compound — get_fx_groups","text":"Dataframe columns basic compound info functional group counts.","code":""},{"path":"https://meredith-lab.github.io/volcalc/reference/get_fx_groups.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Count functional groups of a compound — get_fx_groups","text":"","code":"if (FALSE) { ex_groups <- get_fx_groups(compound_id = \"C16181\") }"},{"path":"https://meredith-lab.github.io/volcalc/reference/keggGetCompounds.html","id":null,"dir":"Reference","previous_headings":"","what":"Get list of KEGG compound IDs for given KEGG pathway — keggGetCompounds","title":"Get list of KEGG compound IDs for given KEGG pathway — keggGetCompounds","text":"temporary helper function function improved pushed KEGGREST package","code":""},{"path":"https://meredith-lab.github.io/volcalc/reference/keggGetCompounds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get list of KEGG compound IDs for given KEGG pathway — keggGetCompounds","text":"","code":"keggGetCompounds(pathway)"},{"path":"https://meredith-lab.github.io/volcalc/reference/keggGetCompounds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get list of KEGG compound IDs for given KEGG pathway — keggGetCompounds","text":"pathway string KEGG identifier molecular pathway","code":""},{"path":"https://meredith-lab.github.io/volcalc/reference/save_compound_mol.html","id":null,"dir":"Reference","previous_headings":"","what":"Download compound .mol file — save_compound_mol","title":"Download compound .mol file — save_compound_mol","text":"Using KEGG ID values compound pathway, download clean corresponding mol file","code":""},{"path":"https://meredith-lab.github.io/volcalc/reference/save_compound_mol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download compound .mol file — save_compound_mol","text":"","code":"save_compound_mol(   compound_id = NULL,   compound_formula = NULL,   pathway_id = NULL,   path = \"data\",   redownload = FALSE )"},{"path":"https://meredith-lab.github.io/volcalc/reference/save_compound_mol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download compound .mol file — save_compound_mol","text":"compound_id character string 5 digits prepended \"C\". compound_formula character string detailing compound formula. pathway_id optional character string specifying KEGG pathway ID, format 5 digits prepended \"map\". path optional parameter set relative path location download data. redownload Download file even already downloaded path.","code":""},{"path":"https://meredith-lab.github.io/volcalc/reference/save_compound_mol.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download compound .mol file — save_compound_mol","text":"Downloaded .mol file compound path folder.","code":""},{"path":"https://meredith-lab.github.io/volcalc/reference/save_compound_mol.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download compound .mol file — save_compound_mol","text":"","code":"if (FALSE) { save_compound_mol(compound_id = \"C16181\") }"},{"path":"https://meredith-lab.github.io/volcalc/reference/volcalc-package.html","id":null,"dir":"Reference","previous_headings":"","what":"volcalc: Calculate Volatility of Chemical Compounds — volcalc-package","title":"volcalc: Calculate Volatility of Chemical Compounds — volcalc-package","text":"Use package calculate estimated volatility values individual compounds interest compounds pathway. Calculation uses SIMPOL method (Prankow Asher, 2008), currently applicable compounds pathways KEGG.","code":""},{"path":[]},{"path":"https://meredith-lab.github.io/volcalc/reference/volcalc-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"volcalc: Calculate Volatility of Chemical Compounds — volcalc-package","text":"Maintainer: Kristina Riemer kristinariemer@arizona.edu (ORCID) [copyright holder] contributors: Eric R. Scott (ORCID) [contributor]","code":""},{"path":"https://meredith-lab.github.io/volcalc/news/index.html","id":"volcalc-development-version","dir":"Changelog","previous_headings":"","what":"volcalc (development version)","title":"volcalc (development version)","text":"Added pkgdown website get_fx_groups() now counts smallest set smallest rings (#57) Fixed bug caused number phenols miscounted. Rather counting phenols, get_fx_groups now counts aromatic hydroxyl groups (e.g. phenols) closely align Pankow & Asher (2008) (#46) package now hex logo!","code":""},{"path":"https://meredith-lab.github.io/volcalc/news/index.html","id":"volcalc-102","dir":"Changelog","previous_headings":"","what":"volcalc 1.0.2","title":"volcalc 1.0.2","text":"Minor change calculation calc_vol()—remove amines functional group avoid double counting primary amines (#49)","code":""},{"path":"https://meredith-lab.github.io/volcalc/news/index.html","id":"volcalc-101","dir":"Changelog","previous_headings":"","what":"volcalc 1.0.1","title":"volcalc 1.0.1","text":"Minor change calculation calc_vol()—use 293.15K temperature (instead 293K) match temperature used Pankow & Asher (2008)","code":""},{"path":"https://meredith-lab.github.io/volcalc/news/index.html","id":"volcalc-100","dir":"Changelog","previous_headings":"","what":"volcalc 1.0.0","title":"volcalc 1.0.0","text":"Initial release volcalc. version code used -prep manuscript. Version 2.0.0 include breaking changes","code":""},{"path":"https://meredith-lab.github.io/volcalc/news/index.html","id":"volcalc-0009000","dir":"Changelog","previous_headings":"","what":"volcalc 0.0.0.9000","title":"volcalc 0.0.0.9000","text":"Added NEWS.md file track changes package.","code":""}]
