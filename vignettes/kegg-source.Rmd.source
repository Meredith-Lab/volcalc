---
title: "Downloading from KEGG"
output: rmarkdown::html_vignette
vignette: >
  %\VignetteIndexEntry{Downloading from KEGG}
  %\VignetteEngine{knitr::rmarkdown}
  %\VignetteEncoding{UTF-8}
---

<!-- generated from kegg-source.Rmd.source.  Please edit that file! -->

```{r, include = FALSE}
knitr::opts_chunk$set(
  collapse = TRUE,
  comment = "#>"
)
```

```{r setup}
library(volcalc)
library(dplyr) #for left_join()
```

The `volcalc` package can be used to download .mol files directly from KEGG given either compound IDs or pathway IDs.

First, choose a directory to download files to.  For this vignette, we will use a temporary directory, but you should choose somewhere in your project.

```{r}
dl_path <- tempdir()
```

### Single compound usage

You can search KEGG for compunds at <https://www.genome.jp/kegg/compound/> to find their KEGG IDs starting with a "C".

Let's download .mol files for two compounds, jasmonic acid and methyl jasmonate, with KEGG IDs [C08491](https://www.kegg.jp/entry/C08491) and [C11512](https://www.kegg.jp/entry/C11512), respectively, using the `volcalc` function `get_mol_kegg()`. 

```{r}
mols <- get_mol_kegg(compound_ids = c("C08491", "C11512"), dir = dl_path)
mols
```

The data frame returned by `get_mol_kegg()` contains the paths the files were downloaded to in `mol_path`, making for convenient passage on to the `volcalc` function `calc_vol()`.

```{r}
rvi <- calc_vol(mols$mol_path)
rvi
```

`calc_vol()` also returns the file paths, so these two data frames can be easily joined.

```{r}
left_join(mols, rvi, by = join_by(mol_path)) %>%
  select(-mol_path)
```


### Pathway usage
<!-- TODO: change this example to a pathway module or smaller pathway -->

We can download single or multiple compounds with `compound_ids`, but we can also download all compounds associated with a KEGG pathway with `pathway_ids`.  Let's download the entire alpha-linolenic acid metabolism pathway ([map00592](https://www.kegg.jp/entry/map00592)) that the above two compounds are part of.

```{r}
alam_pathway <- get_mol_kegg(pathway_ids = "map00592", dir = dl_path)
head(alam_pathway)
dim(alam_pathway)
```

Notice that this returns pathway IDs and compound IDs.  We can do the same as above and pass the `mol_path` column to `calc_vol()` and then join the resulting data frame and do some basic data wrangling to find the top 10 most volatile compounds in that pathway.

```{r}
rvi_path <- calc_vol(alam_pathway$mol_path)
```


```{r}
left_join(alam_pathway, rvi_path, by = join_by(mol_path)) %>% 
  select(-mol_path) %>% 
  #arrange from most to least volatile
  arrange(desc(rvi)) %>% 
  #take just the top 10
  slice_head(n = 10)
```

